<?php
// index.php
// This is the main page for all users.
// Everyone sees:
//   Their credit balance
//   Last five credit transactions
//   Button for giving credits to other members
// REG
//   Next five shifts
//   REALLY BIG button to sign in

// POST
// Credit transfers: credMem, credAmount, credNote
// Check in for shift: checkin (1 or 2)

// GET
// logout = 1 to logout

// Versions
// 1.1 - fixed log in for people whose shifts are recurring
// 1.2 - shows member expiration info and allows user to renew membership
// 1.3 - adds count in and out options

   $securePage = FALSE;
   $title = "Fri3nd Compvter Master P@ge";
   include('funcs.inc');
   include('friendcomputer.inc');
   include('member.inc');
   include('credits.inc');
   include('medals.inc');
   include('header.php');
   $cxn = open_stream();

   $SID = $_SESSION['ID'];
   
   // check for GET data for a logout
   if($_GET['logout'] == 1)
   {
      foreach($_SESSION as $key => $value)
      {
         unset($_SESSION[$key]);
      }

      die ("<h1>Login</h1>
           <hr>
           <form action='index.php' method='post'>
           Username: <input type='text' name='username'><p>
           Password: <input type='password' name='password'><p>
           <input type='submit' name='submit' value='Login'>
           </form><p>");

   }
   
   // get info to display current time
   date_default_timezone_set('America/New_York');
   
   $date = date("l, F jS, o g:i A");
   $shiftNow = determineCurrentShift();
   //date_default_timezone_set('America/New_York');
   $time = localtime();
   //displayError("<br> Debug: Local time is " . $time[2] . ":" . $time[1] . "<br> Debug: Current shift is " . $shiftNow . "<br>Disregard the following line telling you to email the high programmer");

   // process trash button
   if($_POST['trashbutton'] == 1)
   {
      if(transferCredits(1, $_SESSION['ID'], .5, "Taking out the trash", 1))
         $message .= "You have been given 1/2 Hedon for taking out the trash.<p>
                      Thank you for being AWESOME!!!<p>\n";
   }
   // process trash button
   if($_POST['bottlebutton'] == 1)
   {
      if(transferCredits(1, $_SESSION['ID'], .5, "Taking out the bottles", 1))
         $message .= "You have been given 1/2 Hedon for taking out the bottles.<p>
                      Thank you for being AWESOME!!!<p>\n";
   }
   // process trash button
   if($_POST['paperbutton'] == 1)
   {
      if(transferCredits(1, $_SESSION['ID'], .5, "Taking out the paper", 1))
         $message .= "You have been given 1/2 Hedon for taking out the paper.<p>
                      Thank you for being AWESOME!!!<p>\n";
   }
   // process trash button
   if($_POST['humidifier'] == 1)
   {
      if(transferCredits(1, $_SESSION['ID'], .5, "Clearing the humidifer", 1))
         $message .= "You have been given 1/2 Hedon for clearing the humidifier.<p>
                      Thank you for being AWESOME!!!<p>\n";
   }
   // process smallthing button
   if($_POST['smallthing'] == 1)
   {
      if(transferCredits(1, $_SESSION['ID'], .25, "Clearing the humidifer", 1))
         $message .= "You have been given 1/4 Hedon for doing something small.<p>
                      Thank you for being AWESOME!!!<p>\n";
   }
   
   // Account Transfer
   if($_POST['account_submit'] == 1)
   {
      $recip = $_POST['account_recip'];
      $amount = $_POST['account_amount'];
      $avail = getAvailBalance($_SESSION['ID']);
      
      if($amount <= $avail)
      {
         if($recip > 0 && $amount > 0)
         {
            // fork over the dough
            if(accountTransact($_SESSION['ID'], -$amount, 0, "TXed to $recip"))
               if(accountTransact($recip, $amount, 0, "TXed from {$_SESSION['ID']}"))
                  $message .= money($amount) . " transfered to " . printMemberString($recip, 1) . "<p>\n";
               else
                  $message .= "Error giving account to " . printMemberString($recip, 1) . "<p>\n";
            else
               $message .= "Error transfering account.<p>\n";
         }
      }
      else
      {
         $message .= "<font color=RED>You tried to transfer " . money($amount) . ".
                      <br>You have " . money($avail) . " available.<br>Math Fail</font><p>\n";
      }
   }

   // check for removing email
   if($_POST['submit'] == 'submit email')
   {
      $email = $_POST['removeEmail'];
      if(check_email_address($email))
      {
         $sql = "SELECT fname, lname FROM members WHERE email='$email'";
         $result = query($cxn, $sql);
         if($row = mysqli_fetch_assoc($result))
         {
            extract($row);
            $sql = "UPDATE members SET optOut=1 WHERE email='$email'";
            if(query($cxn, $sql))
            {
               $message .= "Email for $fname $lname opted out of list.<p>";
            }
            else
            {
               $message .= "Error setting optout for $fname $lname.<p>";
            }
         }
         else
         {
            $message .= "$email not found in database.<p>";
         }
      }
      else
      {
         $message .= "'$email' not proper email address.<p>";
      }
   }
        
   
   // check for POST data. If there is some, report results.
   if($_POST['submit'] == 'submit transfer')
   {

   extract($_POST);

   // process credit transactions if appropriate
      if($credMem > 0 && $credAmount > 0 && $credReason > 0 && $credReason <= 3)
      {
         $message .= "Processing Hedons<br>";

         $credNote = strip_tags($credNote);
         if(transferCredits($_SESSION['ID'], $credMem, $credAmount, $credNote, $credReason))
         {
            switch($credReason)
            {
               case 1: $message .= "You gave $credAmount Hedons for shift coverage to ";
                       break;
               case 2: $message .= "You gave $credAmount Hedons from the officer fund to ";
                       break;
               case 3: $message .= "You transfered $credAmount Hedons to ";
                       break;
            }
            printMemberString($credMem, 1);
            $message .= "<br>Reason: $credNote<p>";
         }
         else
         {
            $message .= "<b>Insufficient Hedons for your transfer.</b><br>
                  You tried to transfer $credAmount.<p>";
         }
      }
   } // end check for POST submit
   
   // check for hedon request data. If there is some, report results.
   if($_POST['submit'] == 'submit request')
   {

   extract($_POST);

   // process credit transactions if appropriate
      if($hedonAmount > 0)
      {
         $message .= "Requesting Hedons...<br>";

         $hedonNote = strip_tags($hedonNote);
         if(requestCredits($_SESSION['ID'], $hedonAmount, $hedonNote))
         {
            $message .= "Your request for $hedonAmount Hedons has been processed, and will be dealt with as soon as possible.";
         }
         else
         {
            $message .= "Request failed, contact a High Programmer immediately!";
         }
      }
   } // end check for POST submit
   
   // process checkin
   if($_POST['checkin'] == 1)
   {
      // check to see if the staff person has been paid. Pay if they have not
      $sql = "SELECT checkedIn FROM schedule WHERE day=CURDATE() AND shift='$shiftNow'";
      //echo "<b>DEBUG:</b><br>MySQL Query: $sql.<p>";
      $row = queryAssoc($cxn, $sql);
      $payCredits = ($row['checkedIn'] == 0) ? TRUE : FALSE;

      $sql = "UPDATE schedule SET checkedIn='1', staffID='$SID' WHERE day=CURDATE() AND shift='$shiftNow'";
      if(query($cxn, $sql)) // only want to check in if he has not been checked in yet
      {
         if($cxn->affected_rows==0)
         {
            $sql = "INSERT INTO schedule (checkedIn, staffID, day, shift) VALUES ('1', '$SID', CURDATE(), '$shiftNow')";
            query($cxn, $sql);
            if($cxn->affected_rows==0)
            {
				$message .= "DEBUG: Error during checkin. checkin=1, SID=$SID<br>\n";
			}
         }
         

         if($payCredits)
         {
            $message .= "You are now checked in for your shift<br>\n";
            
            $cfts = (($shiftNow == 1) ? ($SHIFTCREDITS + 1) : $SHIFTCREDITS);
            requestCredits($_SESSION['ID'], $cfts, "Covering: " . date("D y-m-d") . " shift: $shiftNow");
				
         } // end if
	 }
   }
   else if($_POST['checkin'] == 2) // meaning that it is recurring and needs a schedule entry made for it
   {
      $shiftNow = determineCurrentShift();
      $sql = "INSERT INTO schedule (checkedIn, staffID, day, shift) VALUES ('1', '$SID', CURDATE(), '$shiftNow')";
      //echo "<b>DEBUG:</b><br>MySQL Query: $sql.<p>";
      if(query($cxn, $sql))
      {
         $message .= "You are now checked in for your regular shift<br>\n";
         
         $cfts = (($shiftNow == 1) ? ($SHIFTCREDITS + 1) : $SHIFTCREDITS);
         requestCredits($_SESSION['ID'], $cfts, "Covering: " . date("D y-m-d") . " shift: $shiftNow");
      }
      else $message .= "Error checking in for recurring schedule shift<p>\n";
   }

   fcMessage($message);   

   //displayMedals($_SESSION['ID'], 25);

   echo "<table><tr><td width=50% valign=top>";

   // show referrals
   $refcount = peopleReferred($_SESSION['ID']);
   echo "You have referred $refcount people so far.<hr>\n";

   // remove from email list
   if($_SESSION['mem'] == 1)
   {
      echo "Remove email address from mailing list: <form action='index.php' method='post'>
            <input name='removeEmail' type='text' size='35' maxlength='90'>
            <input type='submit' name='submit' value='submit email'><hr>";
   }


   // display credit balance
   echo "<h2>Hedon Account</h2>";
   $balance = getCreditTotal($SID);
   echo "Current Balance: $balance<p>\n";
   
   // display pending hedon requests
   displayHedonRequests($SID, 5);
   
   // display last 5 credit transactions
   displayCreditTransactions($SID, 5);

   echo "<hr>";
   
   // display hedon request button
   echo "<b>Request Hedons</b><br>
         <form action='index.php' method='POST'>
         Amount requested: <input type='text' maxlength=4 size=4 name='hedonAmount'><br>
         Reason: <input type='text' maxlength=50 size=4 name='hedonNote'>
         <input type='submit' name='submit' value='submit request'></form><hr>";
                
   // display credit transfer button
   echo "<b>Transfer Hedons</b><br>
         <form action='index.php' method='POST'>
         Recipient: ";
   selectMember('credMem', 0);
   echo "<br>Amount to transfer: <input type='text' maxlength=4 size=4 name='credAmount'><br>
             Note: <input type='text' maxlength=50 size=4 name='credNote'>
             <input type='hidden' name='credReason' value='3'>
             <input type='submit' name='submit' value='submit transfer'></form><hr>";
             
   // display Officer transfer
   if($_SESSION['mem'] == 1)
   {
      echo "<b>Officer Hedon Transfer</b><br>
            This means that you are paying out of the Great Fund!<br>
            <form action='index.php' method='POST'>
            Recipient: ";
      selectMember('credMem', 0);
      echo "<br>Amount to transfer: <input type='text' maxlength=4 size=4 name='credAmount'><br>
            Note: <input type='text' maxlength=50 size=4 name='credNote'>
            <input type='hidden' name='credReason' value='2'>
            <input type='submit' name='submit' value='submit transfer'></form><hr>";
            
      // shift reimbursement
      echo "<b>Shift Reimbursement Transfer</b><br>
            This is a stop gap solution. It will be removed once everything is up and running. In the meantime, this can
            be used to give people Hedons for the shifts that they have covered.<br>
            <form action='index.php' method='POST'>
            Recipient: ";
      selectMember('credMem', 0);
      echo "<br>Amount to transfer: <input type='text' maxlength=4 size=4 name='credAmount'><br>
            Note: <input type='text' maxlength=50 size=4 name='credNote'>
            <input type='hidden' name='credReason' value='1'>
            <input type='submit' name='submit' value='submit transfer'></form><hr>";

   }
            

   echo "</td><td width=50% valign=top>";

   // Trash button
   echo "You can get a Hedons for taking the trash from the store to the trash hoppers. If you do that, push this button. Do not abuse the button!<br>
         <form action='index.php' method='post'>
         <button name='trashbutton' type='submit' value='1'>I took out the trash, give me a half Hedon!</button>
         <button name='bottlebutton' type='submit' value='1'>I took out the bottles, give me a half Hedon!</button>
         <button name='paperbutton' type='submit' value='1'>I took out the paper, give me a half Hedon!</button>
         <button name='humidifier' type='submit' value='1'>I cleared the humidifier, give me a half Hedon!</button><p>
         <button name='smallthing' type='submit' value='1'>I did a little thing, give me 1/4 Hedon!</button>
         </form><p>\n";

   // show gamer rewards info
   FG_showInfoNoSale($_SESSION['ID']);

   // Store Account Stuff
   echo "<a name='account'>
         <h2>Store Account</h2>
         Your current Store Account Balance: " . money(getAccountBalance($_SESSION['ID'])) . "<br>
         Your available Store Account Balance: " . money(getAvailBalance($_SESSION['ID'])) . "<p>
         Transfer Store Account to another Member<br>
         <i>To donate account to the store, give it to Abyss, T (#80)</i><br>
         <form action='index.php' method='post'>
         Amount to transfer: <input name='account_amount' type='text' size=8 maxlength=8><br>
         Recipient: ";
   selectMember('account_recip', 0);
   echo "<br><button name='account_submit' type='sumbit' value='1'>Transfer Account</button></form><hr>\n";

   // display membership status
   echo "<h2>Membership Status</h2>";

   displayMembershipStatus($SID);
   
   echo "<hr>";

   // allow user to renew membership
   echo "   <form action='spendcredits.php' method='post'>
            Renew Membership for <input type='text' name='renew' size=3 maxlength=3> months for 15 Hedons per month.<p>
            <input type='submit' name='submit' value='submit'>
            <input type='submit' name='submit' value='dominate'></form><p>";

   // display shift information
   if($_SESSION['reg'] == 1)
   {//If user has register privs vVv
      // display sign in button if applicable
      // this section stands alone
      if($shiftNow > 0)
      {//If the store is currently open vVv
		   $sched = 0;
		   $sql = "SELECT staffID
                   FROM recurringSchedule
				   WHERE day='" . dayToNum(date("l")) . "' 
                   AND shift='$shiftNow'";
         $result = query($cxn, $sql);
         if($recRow = mysqli_fetch_row($result))
         {
            $sched = 1;
         }
         
         $sql = "SELECT staffID, checkedIn
                   FROM schedule
                  WHERE day=CURDATE()
                    AND shift='$shiftNow'";
         $result = query($cxn, $sql);
         if($intRow = mysqli_fetch_row($result))
         {//If there is anyone on the schedule for today, this is not the recurring schedule. vVv
            $sched = 1; // indicates if there is already a schedule entry or if it is recurring
         }

         //If no one is scheduled, or you're on the schedule, and you're not checked in, or if it's 30 minutes past start of shift, and no one is checked in...
		 if($sched == 0 || ($intRow[1] != 1 && ($recRow[0] == $SID || $intRow[0] == $SID) || lateReg()))
         {
            echo "<form action='index.php' method='post'>
                  <input type='image' src='images/checkin.png' name='checkin' value='1'>
                  </form>";
                  
			if ($sched == 0)
			{
				echo "<hr><table border><tr><td><b>No member is scheduled for this shift.</b></td></tr></table><hr>\n";
			}
			else if (lateReg())
			{
				$curMem = 0;
				if ($recRow[0] > 0)
				{
					$curMem = $recRow[0];
				}
				if ($intRow[0] > 0)
				{
					$curMem = $intRow[0];
				}
				echo "<hr><table border><tr><td><b>";
				printMemberString($curMem, 1);
				echo " is late for this shift.</b></td></tr></table><hr>\n";
			}
         }
         else if($intRow[1] == 1 && $intRow[0] == $SID)
         {
            echo "<hr><table border><tr><td><b>You are currently checked in for this shift</b></td></tr></table><hr>\n";
         }
         else if($intRow[1] == 1)
         {
            echo "<hr><table border><tr><td><b> ";
            echo printMemberString($intRow[0], 1);
            echo " is currently checked in for this shift</b></td></tr></table><hr>\n";
         }
      } // end if shiftNow > 0
      
      // end of displaying check in button

      $sql = "SELECT * FROM recurringSchedule WHERE staffID='$SID'";
      $result = query($cxn, $sql);
      $first = TRUE;
      
      $days = array (1 => "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday");
      $shifts = array (1 => "10 AM - 2 PM", "2 PM - 6 PM", "6 PM - 10 PM");
      
      while($row = mysqli_fetch_assoc($result))
      {
         extract($row);
         if($first)
         {
            echo "<h2>Your Recurring Shifts</h2>
                  <table cellpadding=8>";
            $first = FALSE;
         }
         echo "<tr><td>" . $days[$day] . "</td><td>Shift #$shift</td><td>(" . $shifts[$shift] . ")</td></tr>";
      }
      echo "</table>";
      
      $sql = "SELECT *
                FROM schedule
               WHERE staffID='$SID'
                 AND ADDDATE(CURDATE(), INTERVAL 14 day) > day
                 AND day >= CURDATE()
               ORDER BY day";
      $result = query($cxn, $sql);
      $first = TRUE;
      while($row = mysqli_fetch_assoc($result))
      {
         extract($row);
         if($first)
         {
            echo "<h2>Your upcoming special shifts</h2>";
            $first = FALSE;
         }
	 	 date_default_timezone_set('America/New_York');
         echo date_format(date_create($day), "D M j") . " - " . $shifts[$shift] . "<br>\n";
      }
      if(!$first) echo "<hr>";
   
   } // end if REG
   
     
   echo "</td></tr></table>";
   $version="1.3";
   include ('footer.php');
?>
